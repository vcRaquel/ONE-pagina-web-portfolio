@import url('https://fonts.googleapis.com/css2?family=Krona+One&family=Montserrat:wght@400;600&display=swap');

:root{
    --cor-primaria: #000000;
    --cor-secundaria: #F6F6F6;
    --cor-terciaria: #22D4FD;
    --cor-hover-apresentacao-conteudo-links-link: #272727;
    --cor-hover-cabecalho-menu-link: #007bff;

    --fonte-principal: 'Krona One', sans-serif;
    --fonte-secundaria: 'Montserrat', sans-serif;
}

*{
    margin: 0;
    padding: 0;
}

body{
    box-sizing: border-box;
    background-color: var(--cor-primaria);
    color: var(--cor-secundaria);
}

.cabecalho{
    /*% é porcentagem em relação à tag pai */
    padding: 2% 0% 0% 15%;
}

.cabecalho__menu{
    display: flex;
    gap: 80px;
}

.cabecalho__menu__link{
    font-family: var(--fonte-secundaria);
    /* 24px/16 = 1.5rem */
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--cor-terciaria);
    text-decoration: none;
}

.cabecalho__menu__link:hover{
    color: var(--cor-hover-cabecalho-menu-link);
}

.texto-destaque{
    color: var(--cor-terciaria);
}

.apresentacao{
    /* adicionamos um gap pra garantir que na responsividade os elementos continuem 
    tendo espaço entre eles */
    gap: 82px;
    padding: 5% 15%;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.apresentacao__conteudo{
    /* tínhamos a largura fixa em 615px e por isso não estava responsivo 
    passamos para 50% em conformidade com a visualização meio a meio em relação à imagem*/
    width: 50%;
    display: flex;
    flex-direction: column;
    gap: 40px;
}

.apresentacao__conteudo__titulo{
    /* px não é uma unidade de medida responsiva e 
    por isso não é recomendado utilizar como valor pois irá chumbar o estilo 
    por isso vamos usar rem para transformar de px pra rem usamos a escala de 16px = 1rem
    potanto pegamos o valor de px e dividimos por 16 pra encontrar o equivalente em rem
    px/16 = rem no caso 36/16 = 2.25*/
    font-size: 2.25rem;
    font-family: var(--fonte-principal);

}

.titulo-destaque{
    color: var(--cor-terciaria);
}

.apresentacao__conteudo__texto{
    /* 24px/16 = 1.5rem */
    font-size: 1.5rem;
    font-family: var(--fonte-secundaria);
}

.apresentacao__conteudo__texto a{
    text-decoration: none;
    color: var(--cor-terciaria);
}

.apresentacao__conteudo__links{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    gap: 32px;
}

.apresentacao__conteudo__links__subtitulo{
    font-family: var(--fonte-principal);
    font-weight: 400;
    /* 24px/16 = 1.5rem */
    font-size: 1.5rem;
}

.apresentacao__conteudo__links__navegacao{
    display: flex;
    justify-content: center;
    gap: 16px;
    border: 2px solid var(--cor-terciaria);
    /* trocamos a largura de 378px */
    width: 50%;
    text-align: center;
    border-radius: 8px;
    /* 24px/16 = 1.5rem */
    font-size: 1.5rem;
    font-family: var(--fonte-secundaria);
    font-weight: 600;
    padding: 21.5px 0;
    text-decoration: none;
    color: var(--cor-secundaria);
}

.apresentacao__conteudo__links__link:hover{
    background-color: var(--cor-hover-apresentacao-conteudo-links-link);
}

.apresentacao__imagem{
    /* Largura em porcentagem do elemento pai = % 
    mudando a largura, vai mudar a altura de modo automático acompanhando a escala da imagem*/
    width: 50%;

}

.rodape{
    padding: 24px;
    background-color: var(--cor-terciaria);
    color: var(--cor-primaria);
    text-align: center;
    font-family: var(--fonte-secundaria);
    /* 24px/16 = 1.5rem */
    font-size: 1.5rem;
    font-weight: 400;
}

/* usamos essa propriedade pra criar um estilo alternativo para os casos em que a tela 
tenha o tamanho menor do que o especificado, usado por exemplo para criar o estilo usado em mobile
@media(condição, como tamanho máximo de tela por ex){faça o que tá na chave} */
 @media(max-width:1200px){
    .cabecalho{
        /* espaçamento de cima (na verdade aplicado pra todos os lados, mas o orientador foi o espaço de cima */
        padding: 10%;
    }

    .cabecalho__menu{
        /*não precisa declarar o display flex pois já foi declarado fora do media pra essa propriedade
        no media colocamos apenas as modificações  */
        /* para alinhar no centro */
        justify-content: center;
    }

    .apresentacao{
        /* usamos o column pra mudar a disposição de linha pra coluna e trazer a imagem pro eixo do texto 
        fazendo apenas isso, a imagem ficaria embaixo por conta da ordem de declaração do HTML 
        que é respeitando o design de visualização web. 
        Pra inverter a ordem dos elementos e levar a imagem pra cima, usamos o reverse no column*/
        flex-direction: column-reverse;
        padding: 5%;
    }

    .apresentacao__conteudo{
        /* dizer pra usar todo o espaço do padding do elemento apresentação usamos auto (100%) */
        width: auto;
    }
    
 }